{"version":3,"sources":["types/browser-message-types.ts","features/playlist-fetch/redux/slice.ts","features/downloads-list/redux/slice.ts","features/redux/reducers.ts","mock/downloads.ts","mock/get-browser-mock.ts","utils/get-browser.ts","features/downloads-list/redux/saga.ts","features/playlist-fetch/redux/saga.ts","features/redux/sagas.ts","features/redux/store.ts","theme.ts","features/loading/index.tsx","components/rounded-wrapper.tsx","components/progress-bar.tsx","components/thumbnail.tsx","components/video.tsx","features/playlist-fetch/index.tsx","features/downloads-list/index.tsx","features/header/index.tsx","scenes/main/index.tsx","index.tsx"],"names":["MessageType","initialState","downloadingAudio","isFetching","videos","undefined","playlistSlice","createSlice","name","reducers","fetchVideos","state","_action","fetchVideosCompleted","payload","actions","downloads","DownloadListSlice","fetchDownloads","_state","fetchDownloadsComplete","action","removeFirstDownload","slice","combineReducers","playlist","PlaylistFetchReducer","DownloadsListReducer","tabId","active","isAudio","total","received","videoId","title","mockBrowser","runtime","sendMessage","_a","message","_b","response","type","getActiveDownloads","console","warn","checkBrowser","browser","api","window","chrome","a","Promise","resolve","DownloadsList","Browser","put","takeLatest","fetchDownloadsAction","fetchPlaylistSaga","playlistId","id","fetch","json","fetchVideosAction","sagas","DownloadsListSaga","sagaMiddleware","createSagaMiddleware","store","createStore","reducer","applyMiddleware","forEach","run","theme","video","audio","gray100","gray200","gray300","gray400","gray500","white","spinAnimation","keyframes","LoadingCircle","styled","div","Loading","isLoading","children","className","defaultProps","Wrapper","RoundedWrapper","Bar","p","progress","ProgressBar","StyledPicture","picture","StyledImg","img","Thumbnail","src","size","map","srcSet","loading","ContentWrapper","VideoInfoWrapper","StyledProgressBar","Video","progressTotal","showProgress","FormWrapper","form","FormField","FormColumnField","StyledLabel","label","connect","dispatch","playlistUrlRef","createRef","downloadAudioRef","onSubmit","e","preventDefault","playlistUrl","current","downloadAudio","link","listParams","URL","search","substring","split","param","find","error","getPlaylistId","value","checked","htmlFor","placeholder","ref","defaultChecked","renderVideos","removeFirstDownloadAction","useEffect","interval","setInterval","clearInterval","download","StyledImage","Header","width","StyledWrapper","StyledDownloadsList","Home","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2112d16.chunk.js","sourcesContent":["enum MessageType {\n  startDownload = 'start_download',\n  cancelDownload = 'cancel_download',\n  awaitVideoInfo = 'await_video_info',\n  getActiveDownloads = 'get_active_downloads',\n  updateTitle = 'update_title',\n  highlightTab = 'highlight_tab',\n}\nexport default MessageType;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\ninterface stateProps {\r\n  downloadingAudio: boolean;\r\n  isFetching: boolean;\r\n  videos?: Video[];\r\n}\r\n\r\nconst initialState: stateProps = {\r\n  downloadingAudio: true,\r\n  isFetching: false,\r\n  videos: undefined,\r\n};\r\n\r\nconst playlistSlice = createSlice({\r\n  name: 'playlist',\r\n  initialState,\r\n  reducers: {\r\n    fetchVideos: (\r\n      state: stateProps,\r\n      _action: PayloadAction<{ id: string; isAudio: boolean }>\r\n    ) => ({\r\n      ...state,\r\n      isFetching: true,\r\n    }),\r\n    fetchVideosCompleted: (\r\n      state: stateProps,\r\n      {\r\n        payload: { videos, downloadingAudio },\r\n      }: PayloadAction<{ videos: Video[]; downloadingAudio: boolean }>\r\n    ) => ({\r\n      ...state,\r\n      isFetching: false,\r\n      downloadingAudio,\r\n      videos,\r\n    }),\r\n  },\r\n});\r\n\r\nexport const { fetchVideos, fetchVideosCompleted } = playlistSlice.actions;\r\nexport default playlistSlice.reducer;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\ntype initialStateType = {\r\n  downloads?: Download[];\r\n  isFetching: boolean;\r\n};\r\n\r\nconst initialState: initialStateType = {\r\n  downloads: undefined,\r\n  isFetching: false,\r\n};\r\n\r\nconst DownloadListSlice = createSlice({\r\n  name: 'downloads',\r\n  initialState,\r\n  reducers: {\r\n    fetchDownloads: _state => {},\r\n    fetchDownloadsComplete: (state, action: PayloadAction<Download[]>) => ({\r\n      ...state,\r\n      downloads: action.payload,\r\n      isFetching: false,\r\n    }),\r\n    removeFirstDownload: state => ({\r\n      ...state,\r\n      downloads: state.downloads?.slice(1),\r\n    }),\r\n  },\r\n});\r\n\r\nexport const { fetchDownloads, fetchDownloadsComplete, removeFirstDownload } =\r\n  DownloadListSlice.actions;\r\n\r\nexport default DownloadListSlice.reducer;\r\n","import { combineReducers } from 'redux';\r\nimport PlaylistFetchReducer from 'features/playlist-fetch/redux/slice';\r\nimport DownloadsListReducer from 'features/downloads-list/redux/slice';\r\n\r\nexport default combineReducers({\r\n  playlist: PlaylistFetchReducer,\r\n  downloads: DownloadsListReducer,\r\n});\r\n","const downloads = [\r\n  {\r\n    tabId: 43,\r\n    active: true,\r\n    isAudio: true,\r\n    total: 4569474,\r\n    received: 1569474,\r\n    videoId: 'kSiVGS-8yN0',\r\n    title: 'D-Block & S-te-Fan - Gates Of Paradise',\r\n  },\r\n  {\r\n    tabId: 27,\r\n    active: false,\r\n    isAudio: false,\r\n    total: 4569474,\r\n    received: 4069474,\r\n    videoId: 'kSiVGS-8yN0',\r\n    title: 'D-Block & S-te-Fan - Gates Of Paradise',\r\n  },\r\n];\r\n\r\nexport default downloads;\r\n","import MessageType from 'types/browser-message-types';\r\nimport downloads from './downloads';\r\n\r\nconst mockBrowser = () => ({\r\n  runtime: {\r\n    sendMessage: (\r\n      _a: any,\r\n      message: CallMessage,\r\n      _b: any,\r\n      response: (param1: any) => void\r\n    ) => {\r\n      switch (message.type) {\r\n        case MessageType.getActiveDownloads:\r\n          response(downloads);\r\n          break;\r\n\r\n        default:\r\n          console.warn(`Called unhandled MessageType: ${message}`);\r\n          response(null);\r\n          break;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport default mockBrowser;\r\n","import mockBrowser from 'mock/get-browser-mock';\r\n\r\nconst checkBrowser = (browser: any) =>\r\n  !!browser?.runtime?.sendMessage ? browser : null;\r\n\r\nconst api =\r\n  checkBrowser(window.browser) ?? checkBrowser(window.chrome) ?? mockBrowser();\r\n\r\nconst browser: Browser = {\r\n  sendMessage: async <T>(message: CallMessage): Promise<T> => {\r\n    return await new Promise(resolve =>\r\n      api.runtime.sendMessage(null, message, null, resolve)\r\n    );\r\n  },\r\n};\r\n\r\nexport default browser;\r\n","import { put, takeLatest } from 'redux-saga/effects';\r\nimport MessageType from 'types/browser-message-types';\r\nimport Browser from 'utils/get-browser';\r\nimport {\r\n  fetchDownloads as fetchDownloadsAction,\r\n  fetchDownloadsComplete,\r\n} from './slice';\r\n\r\nfunction* fetchDownloads(): any {\r\n  const response: Download[] = yield Browser.sendMessage<Download[]>({\r\n    type: MessageType.getActiveDownloads,\r\n  });\r\n\r\n  yield put(fetchDownloadsComplete(response));\r\n}\r\n\r\nfunction* DownloadsList() {\r\n  yield takeLatest(fetchDownloadsAction.type, fetchDownloads);\r\n}\r\n\r\nexport default DownloadsList;\r\n","import { put, takeLatest } from 'redux-saga/effects';\r\nimport {\r\n  fetchVideos as fetchVideosAction,\r\n  fetchVideosCompleted,\r\n} from './slice';\r\n\r\ntype fetchVideosActionType = ReturnType<typeof fetchVideosAction>;\r\n\r\nfunction* fetchVideos(action: fetchVideosActionType) {\r\n  const { id: playlistId, isAudio: downloadingAudio } = action.payload;\r\n\r\n  const response: Response = yield fetch(\r\n    `https://richee.me/playlist/?list=${playlistId}`\r\n  );\r\n  const videos: Video[] = yield response.json();\r\n\r\n  yield put(fetchVideosCompleted({ videos, downloadingAudio }));\r\n}\r\n\r\nfunction* fetchPlaylistSaga() {\r\n  yield takeLatest<fetchVideosActionType>(fetchVideosAction.type, fetchVideos);\r\n}\r\n\r\nexport default fetchPlaylistSaga;\r\n","import DownloadsListSaga from 'features/downloads-list/redux/saga';\r\nimport PlaylistFetchSaga from 'features/playlist-fetch/redux/saga';\r\n\r\nconst sagas = [PlaylistFetchSaga, DownloadsListSaga];\r\n\r\nexport default sagas;\r\n","import { applyMiddleware, createStore } from '@reduxjs/toolkit';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport reducer from './reducers';\r\nimport sagas from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(reducer, applyMiddleware(sagaMiddleware));\r\n\r\nsagas.forEach(sagaMiddleware.run);\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport default store;\r\n","const theme = {\r\n  video: '#808',\r\n  audio: '#773004',\r\n\r\n  gray100: '#333',\r\n  gray200: '#555',\r\n  gray300: '#666',\r\n  gray400: '#888',\r\n  gray500: '#ccc',\r\n  white: '#fff',\r\n};\r\n\r\nexport default theme;\r\n","import styled, { keyframes } from 'styled-components';\r\n\r\nconst spinAnimation = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nconst LoadingCircle = styled.div`\r\n  position: absolute;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  width: 90%;\r\n  height: 4rem;\r\n  z-index: 1;\r\n\r\n  &:after {\r\n    content: ' ';\r\n    display: block;\r\n    width: 24px;\r\n    height: 24px;\r\n    margin: 1rem 0 0 calc(50% - 24px);\r\n    border-radius: 50%;\r\n    border: 3px solid #fff;\r\n    border-color: #fff transparent #fff transparent;\r\n    animation: ${spinAnimation} 1.2s linear infinite;\r\n  }\r\n`;\r\n\r\ntype Props = {\r\n  children?: any;\r\n  isLoading: boolean;\r\n  className?: string;\r\n};\r\n\r\nconst defaultProps: Pick<Props, 'isLoading'> = {\r\n  isLoading: false,\r\n};\r\n\r\nconst Loading = ({ isLoading, children, className }: Props) => (\r\n  <div className={className}>{isLoading ? <LoadingCircle /> : children}</div>\r\n);\r\n\r\nLoading.defaultProps = defaultProps;\r\n\r\nexport default Loading;\r\n","import styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  & > :first-child {\r\n    border-radius: 10px 10px 0 0;\r\n  }\r\n  & > :last-child {\r\n    border-radius: 0 0 10px 10px;\r\n  }\r\n`;\r\n\r\ntype Props = {\r\n  children?: JSX.Element | JSX.Element[];\r\n};\r\n\r\nconst RoundedWrapper = ({ children }: Props) => <Wrapper>{children}</Wrapper>;\r\n\r\nexport default RoundedWrapper;\r\n","import styled from 'styled-components';\r\n\r\ntype Props = {\r\n  className?: string;\r\n  isAudio: boolean;\r\n  progress: number;\r\n  total: number;\r\n};\r\n\r\nconst defaultProps: Pick<Props, 'isAudio'> = {\r\n  isAudio: true,\r\n};\r\n\r\nconst Bar = styled.div<Props>`\r\n  height: 100%;\r\n  display: block;\r\n  position: relative;\r\n  border-radius: 10px;\r\n  margin-bottom: 5px;\r\n  transition: ease-out 0.1s;\r\n  box-shadow: inset 0 0 4px ${p => p.theme.gray100};\r\n  background: ${p => (p.isAudio ? p.theme.audio : p.theme.video)};\r\n  width: ${p => (p.progress / p.total) * 100}%;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 0.5rem;\r\n`;\r\n\r\nconst ProgressBar = ({ progress, total, isAudio, className }: Props) => {\r\n  const renderBar = () => (\r\n    <Bar progress={progress} total={total} isAudio={isAudio} />\r\n  );\r\n\r\n  return <Wrapper className={className}>{renderBar()}</Wrapper>;\r\n};\r\n\r\nProgressBar.defaultProps = defaultProps;\r\nexport default ProgressBar;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledPicture = styled.picture`\r\n  max-height: 64px;\r\n`;\r\n\r\nconst StyledImg = styled.img`\r\n  border-radius: 10px;\r\n  max-height: inherit;\r\n  height: 100%;\r\n  width: auto;\r\n  aspect-ratio: 16/9;\r\n`;\r\n\r\ntype Props = {\r\n  videoId: string;\r\n  className?: string;\r\n};\r\n\r\nconst Thumbnail = ({ className, videoId }: Props) => {\r\n  const src = (size: string) => `https://i.ytimg.com/vi/${videoId}/${size}.jpg`;\r\n\r\n  const renderSource = (size: string) => (\r\n    <source key={size} srcSet={src(size)} />\r\n  );\r\n\r\n  return (\r\n    <StyledPicture className={className}>\r\n      {['default', 'hqdefault'].map(renderSource)}\r\n      <StyledImg\r\n        key=\"maxresdefault\"\r\n        srcSet={src('maxresdefault')}\r\n        loading=\"lazy\"\r\n      />\r\n    </StyledPicture>\r\n  );\r\n};\r\n\r\nexport default Thumbnail;\r\n","import { ProgressBar, Thumbnail } from 'components';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div<{ tabId?: number }>`\r\n  ${p => p.tabId && 'cursor: pointer;'}\r\n  padding: 0.5rem;\r\n  user-select: none;\r\n  background-color: #555;\r\n  box-shadow: 2px 2px 3px #333;\r\n`;\r\n\r\nconst ContentWrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  font-size: 10px;\r\n`;\r\n\r\nconst VideoInfoWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n  width: 100%;\r\n  margin-left: 0.5rem;\r\n`;\r\n\r\nconst StyledProgressBar = styled(ProgressBar)`\r\n  margin-top: 0.25rem;\r\n`;\r\n\r\ntype Props = {\r\n  progressTotal?: number;\r\n  showProgress?: boolean;\r\n  progress?: number;\r\n  isAudio?: boolean;\r\n  tabId?: number;\r\n  video: Video;\r\n};\r\n\r\nconst defaultProps: Pick<Props, 'isAudio' | 'showProgress'> = {\r\n  showProgress: false,\r\n  isAudio: true,\r\n};\r\n\r\nconst Video = ({\r\n  progressTotal,\r\n  showProgress,\r\n  progress,\r\n  isAudio,\r\n  tabId,\r\n  video: { title, id },\r\n}: Props) => (\r\n  <Wrapper\r\n    tabId={tabId}\r\n    key={id}\r\n    id={id}\r\n    {...(tabId && { title: 'Switch to tab' })}\r\n  >\r\n    <ContentWrapper>\r\n      <Thumbnail videoId={id} />\r\n\r\n      <VideoInfoWrapper>\r\n        <span>{title}</span>\r\n        <span>{isAudio ? 'Audio (.weba)' : 'Video (.webm)'}</span>\r\n      </VideoInfoWrapper>\r\n    </ContentWrapper>\r\n\r\n    {showProgress && progressTotal && progress && (\r\n      <StyledProgressBar\r\n        isAudio={isAudio}\r\n        progress={progress}\r\n        total={progressTotal}\r\n      />\r\n    )}\r\n  </Wrapper>\r\n);\r\n\r\nVideo.defaultProps = defaultProps;\r\nexport default Video;\r\n","import React, { createRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport Loading from 'features/loading';\r\nimport { RoundedWrapper, Video } from 'components';\r\nimport { AppDispatch, RootState } from 'features/redux/store';\r\nimport { fetchVideos as fetchVideosAction } from './redux/slice';\r\n\r\nconst FormWrapper = styled.form`\r\n  position: relative;\r\n  width: 80%;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n`;\r\n\r\nconst FormField = styled.div`\r\n  display: flex;\r\n  margin: 0.2rem;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 90%;\r\n`;\r\n\r\nconst FormColumnField = styled(FormField)`\r\n  flex-direction: column;\r\n\r\n  & > * {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst StyledLabel = styled.label`\r\n  margin-bottom: 0.2rem;\r\n`;\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  isFetching: state.playlist.isFetching,\r\n  isAudio: state.playlist.downloadingAudio,\r\n  videos: state.playlist.videos,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\r\n  fetchVideos: (id: string, isAudio: boolean) =>\r\n    dispatch(fetchVideosAction({ id, isAudio })),\r\n});\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps>;\r\n\r\nconst PlaylistFetch = ({ isFetching, fetchVideos, videos, isAudio }: Props) => {\r\n  const playlistUrlRef = createRef<HTMLInputElement>();\r\n  const downloadAudioRef = createRef<HTMLInputElement>();\r\n\r\n  const getPlaylistId = (link: string) => {\r\n    try {\r\n      const search = new URL(link).search;\r\n\r\n      const listParams = search\r\n        .substring(1)\r\n        .split('&')\r\n        .map(param => param.split('='))\r\n        .find(param => param[0] === 'list');\r\n\r\n      return listParams ? listParams[1] : null;\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const playlistUrl = playlistUrlRef.current;\r\n    const downloadAudio = downloadAudioRef.current;\r\n\r\n    if (playlistUrl && downloadAudio) {\r\n      const id = getPlaylistId(playlistUrl.value);\r\n      const isAudio = downloadAudio.checked;\r\n\r\n      if (id) {\r\n        fetchVideos(id, isAudio);\r\n      }\r\n    }\r\n  };\r\n\r\n  const renderVideos = () => {\r\n    if (videos) {\r\n      return videos.map(video => (\r\n        <Video isAudio={isAudio} key={video.id} video={video} />\r\n      ));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Loading isLoading={isFetching}>\r\n      <FormWrapper onSubmit={handleFormSubmit}>\r\n        <FormColumnField>\r\n          <StyledLabel htmlFor=\"playlist-url\">\r\n            Playlist URL (Enter to start download)\r\n          </StyledLabel>\r\n          <input\r\n            type=\"url\"\r\n            name=\"playlist-url\"\r\n            id=\"playlist-input\"\r\n            placeholder=\"https://www.youtube.com/playlist?list=...\"\r\n            ref={playlistUrlRef}\r\n          />\r\n        </FormColumnField>\r\n        <FormField>\r\n          <div>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"mime-type\"\r\n              id=\"audio\"\r\n              ref={downloadAudioRef}\r\n              defaultChecked\r\n            />\r\n            <StyledLabel htmlFor=\"audio\">Audio</StyledLabel>\r\n          </div>\r\n          <div>\r\n            <input type=\"radio\" name=\"mime-type\" id=\"video\" />\r\n            <StyledLabel htmlFor=\"video\">Video</StyledLabel>\r\n          </div>\r\n        </FormField>\r\n      </FormWrapper>\r\n      <br />\r\n      <RoundedWrapper>\r\n        {renderVideos()}\r\n      </RoundedWrapper>\r\n    </Loading>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlaylistFetch);\r\n","import { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RoundedWrapper, Video } from 'components';\r\nimport { AppDispatch, RootState } from 'features/redux/store';\r\nimport {\r\n  fetchDownloads as fetchDownloadsAction,\r\n  removeFirstDownload as removeFirstDownloadAction,\r\n} from './redux/slice';\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  downloads: state.downloads.downloads,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\r\n  fetchDownloads: () => dispatch(fetchDownloadsAction()),\r\n  removeFirstDownload: () => dispatch(removeFirstDownloadAction()),\r\n});\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps>;\r\n\r\nconst DownloadsList = ({ downloads, fetchDownloads }: Props) => {\r\n  useEffect(() => {\r\n    const interval = setInterval(fetchDownloads, 1000);\r\n    return () => clearInterval(interval);\r\n  });\r\n\r\n  if (!downloads) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <RoundedWrapper>\r\n      {downloads.map(download => (\r\n        <Video\r\n          key={download.tabId}\r\n          tabId={download.tabId}\r\n          video={{ id: download.videoId, title: download.title }}\r\n          progress={download.received}\r\n          progressTotal={download.total}\r\n          isAudio={download.isAudio}\r\n          showProgress\r\n        />\r\n      ))}\r\n    </RoundedWrapper>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DownloadsList);\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledImage = styled.img`\r\n  display: block;\r\n  position: relative;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n`;\r\n\r\nconst Header = () => (\r\n  <Wrapper>\r\n    <StyledImage src=\"../../icons/128.png\" width=\"96px\" />\r\n    <h2>YouTube Downloads</h2>\r\n  </Wrapper>\r\n);\r\n\r\nexport default Header;","import styled from 'styled-components';\r\nimport PlaylistFetch from 'features/playlist-fetch';\r\nimport DownloadsList from 'features/downloads-list';\r\nimport Header from 'features/header';\r\n\r\nconst StyledWrapper = styled.div`\r\n  background: #777;\r\n  border-radius: 1rem;\r\n  padding: 0.5rem;\r\n  position: relative;\r\n  min-width: 350px;\r\n  width: 30%;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n`;\r\n\r\nconst StyledDownloadsList = styled(DownloadsList)`\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst Home = () => (\r\n  <StyledWrapper>\r\n    <Header />\r\n    <StyledDownloadsList />\r\n    <br />\r\n    <PlaylistFetch />\r\n  </StyledWrapper>\r\n);\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\nimport store from 'features/redux/store';\nimport theme from './theme';\nimport Home from 'scenes/main';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <Home />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}